package thread_s;

/**
 * 多线程访问共享对象和数据的方式
 * <p>
 * Created by Administrator on 2018/6/25 0025.
 */
public class MutiThread {
    /*
       如果每个线程执行的代码相同，可以使用同一个Runnable对象，这个Runnable中有那个共享数据，例如，卖票系统就可以这么做。
       如果每个线程执行的代码不同，这时候需要用不同的Runnable对象，有如下两种方式来实现这些Runnable对象之间的数据共享：
            1.将共享数据封装在另外一个对象中，然后将这个对象逐一传递给各个Runnable对象，每个线程对共享数据的操作方法也分配到那个
            对象身上去完成，这样容易实现针对该数据进行的各个操作的互斥和通信。
            2.将这些Runnable对象作为某一类中的内部类，共享数据作为这个外部类中的成员变量，每个线程对共享数据的操作方法也分配给
            外部类，以便实现对共享数据进行的各个操作的互斥和通信，作为内部类的各个Runnable对象调用外部类的这些方法。

            上面两种方式的组合：将共享数据封装在另外一个对象中，每个线程对共享数据的操作方法也分配到那个对象身上去完成，
            对象作为这个外部类中的成员变量或方法中的局部变量，每个线程的Runnable对象作为外部类中的成员内部类或局部内部类。

            总之，要同步互斥的几段代码最好是分别放在几个独立的方法中，这些方法再放在同一个类中，这样比较容易实现它们之间的
            同步互斥和通信。
     */

    public static void main(String[] args) {

    }
}
